{"version":3,"file":"static/js/642.ead39c69.chunk.js","mappings":"8KAKA,MAwMA,EAxM0BA,KACxB,MAAMC,GAAWC,EAAAA,EAAAA,OACX,WAAEC,EAAYC,QAASC,IAAsBC,EAAAA,EAAAA,OAC7C,SAAEC,IAAaC,EAAAA,EAAAA,OACf,cAAEC,EAAeL,QAASM,IAAiBC,EAAAA,EAAAA,MAM3CC,EAAmBC,IACT,CACZ,qEAAe,eACf,+FAAqB,eACrB,qGAAsB,eACtB,+CAAa,eACb,6EAAkB,UAEPA,IAAa,gBAGtBC,EAAoBD,IACT,CACb,qEAAe,cACf,+FAAqB,gBACrB,qGAAsB,cACtB,+CAAa,eACb,6EAAkB,iBAENA,IAAa,eAG7B,OAAIR,GAAqBK,GAErBK,EAAAA,EAAAA,KAAA,OAAKC,UAAU,2DAA0DC,UACvEF,EAAAA,EAAAA,KAACG,EAAAA,EAAc,CAACC,KAAK,QAAQC,KAAK,wHAMtCC,EAAAA,EAAAA,MAAA,OAAKL,UAAU,0BAAyBC,SAAA,EAEtCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,8BAA6BC,UAC1CF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,+CAA8CC,UAC3DI,EAAAA,EAAAA,MAAA,OAAKL,UAAU,cAAaC,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,wCAAuCC,SAAC,uGAGtDF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,0CAAyCC,SAAC,2SAO7DI,EAAAA,EAAAA,MAAA,OAAKL,UAAU,+CAA8CC,SAAA,EAE3DI,EAAAA,EAAAA,MAAA,OAAKL,UAAU,8CAA6CC,SAAA,EAC1DI,EAAAA,EAAAA,MAAA,OAAKL,UAAU,gDAA+CC,SAAA,EAC5DF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wCAAuCC,SACnDd,EAAWmB,UAEdP,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeC,SAAC,0GAEjCI,EAAAA,EAAAA,MAAA,OAAKL,UAAU,gDAA+CC,SAAA,EAC5DF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yCAAwCC,SACpDV,EAASe,UAEZP,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeC,SAAC,kFAEjCI,EAAAA,EAAAA,MAAA,OAAKL,UAAU,gDAA+CC,SAAA,EAC5DI,EAAAA,EAAAA,MAAA,OAAKL,UAAU,0CAAyCC,SAAA,CACrDV,EAASe,OAAS,EAAIC,KAAKC,MAAMjB,EAASkB,QAAO,CAACC,EAAKC,IAAMD,EAAMC,EAAEC,OAAO,GAAKrB,EAASe,QAAU,EAAE,cAEzGP,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeC,SAAC,+EAKnCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uDAAsDC,SAClEd,EAAW0B,KAAKhB,IACf,MAAMiB,EAAQrB,EAAcI,IAAa,CAAC,EAC1C,OACEE,EAAAA,EAAAA,KAAA,OAEEgB,QAASA,IAhFMlB,KAC3BZ,EAAS,sBAAD+B,OAAuBC,mBAAmBpB,IAAY,EA+EnCqB,CAAoBrB,GACnCG,UAAU,oGAAmGC,UAE7GI,EAAAA,EAAAA,MAAA,OAAKL,UAAU,MAAKC,SAAA,EAClBI,EAAAA,EAAAA,MAAA,OAAKL,UAAU,yBAAwBC,SAAA,EACrCF,EAAAA,EAAAA,KAAA,OAAKC,UAAS,wBAAAgB,OAA0BlB,EAAiBD,GAAS,8DAA6DI,SAC5HL,EAAgBC,MAEnBQ,EAAAA,EAAAA,MAAA,OAAAJ,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,kFAAiFC,SAC5FJ,KAEHQ,EAAAA,EAAAA,MAAA,KAAGL,UAAU,wBAAuBC,SAAA,CACjCa,EAAMK,OAAS,EAAE,uDAKvBL,EAAMK,MAAQ,IACbd,EAAAA,EAAAA,MAAA,OAAKL,UAAU,iBAAgBC,SAAA,EAC7BI,EAAAA,EAAAA,MAAA,OAAKL,UAAU,+BAA8BC,SAAA,EAC3CF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,gBAAeC,SAAC,4CAChCI,EAAAA,EAAAA,MAAA,QAAML,UAAU,cAAaC,SAAA,CAAEM,KAAKC,MAAMM,EAAMM,WAAW,iBAE7Df,EAAAA,EAAAA,MAAA,OAAKL,UAAU,+BAA8BC,SAAA,EAC3CF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,gBAAeC,SAAC,4CAChCI,EAAAA,EAAAA,MAAA,QAAML,UAAU,cAAaC,SAAA,CAAEM,KAAKC,MAAMM,EAAMO,WAAW,iBAE7DhB,EAAAA,EAAAA,MAAA,OAAKL,UAAU,+BAA8BC,SAAA,EAC3CF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,gBAAeC,SAAC,0EAChCI,EAAAA,EAAAA,MAAA,QAAML,UAAU,cAAaC,SAAA,CAAEM,KAAKC,MAAMM,EAAMQ,WAAW,oBAKjEjB,EAAAA,EAAAA,MAAA,OAAKL,UAAU,oCAAmCC,SAAA,EAChDF,EAAAA,EAAAA,KAAA,UAAQC,UAAU,8EAA6EC,SAAC,uGAGhGF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oEAAoEuB,KAAK,OAAOC,OAAO,eAAeC,QAAQ,YAAWxB,UACtIF,EAAAA,EAAAA,KAAA,QAAM2B,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,0BAzCtEhC,EA6CD,OAMZQ,EAAAA,EAAAA,MAAA,OAAKL,UAAU,QAAOC,SAAA,EACpBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,oDAAmDC,SAAC,2FAIlEI,EAAAA,EAAAA,MAAA,OAAKL,UAAU,uDAAsDC,SAAA,EACnEI,EAAAA,EAAAA,MAAA,OACEU,QAASA,IAAM9B,EAAS,mCACxBe,UAAU,oHAAmHC,SAAA,EAE7HF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeC,SAAC,kBAC/BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,0EAAyEC,SAAC,+BAGxFF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,6BAA4BC,SAAC,oGAK5CI,EAAAA,EAAAA,MAAA,OACEU,QAASA,IAAM9B,EAAS,kCACxBe,UAAU,oHAAmHC,SAAA,EAE7HF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeC,SAAC,kBAC/BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,0EAAyEC,SAAC,0BAGxFF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,6BAA4BC,SAAC,sHAK5CI,EAAAA,EAAAA,MAAA,OACEU,QAASA,IAAM9B,EAAS,mCACxBe,UAAU,oHAAmHC,SAAA,EAE7HF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeC,SAAC,YAC/BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,0EAAyEC,SAAC,2BAGxFF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,6BAA4BC,SAAC,wFAK5CI,EAAAA,EAAAA,MAAA,OACEU,QAASA,IAAM9B,EAAS,mCACxBe,UAAU,oHAAmHC,SAAA,EAE7HF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeC,SAAC,kBAC/BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,0EAAyEC,SAAC,kDAGxFF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,6BAA4BC,SAAC,gIAO9C,C,yECtMV,MACM6B,EAAG,GAAAd,OADWe,yEACM,QAEbvC,EAAc,WAAmB,IAAlBwC,EAAOC,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EACrC,MAAO1C,EAAU4C,IAAeC,EAAAA,EAAAA,UAAS,KAClChD,EAASiD,IAAcD,EAAAA,EAAAA,WAAS,IAChCE,EAAOC,IAAYH,EAAAA,EAAAA,UAAS,OAE7B,SACJvC,EAAW,KAAI,OACf2C,EAAS,KAAI,SACbC,EAAW,KAAI,SACfC,EAAW,KAAI,OACfC,EAAS,KAAI,MACbC,EAAQ,KAAI,UACZC,GAAY,GACVb,EAEEc,GAAgBC,EAAAA,EAAAA,cAAYC,UAChC,IACEX,GAAW,GACXE,EAAS,MAET,MAAMU,EAAS,IAAIC,gBACfrD,GAAUoD,EAAOE,OAAO,WAAYtD,GACpC2C,GAAQS,EAAOE,OAAO,SAAUX,GAChCC,GAAUQ,EAAOE,OAAO,YAAaV,GACrCC,GAAUO,EAAOE,OAAO,YAAaT,GACrCC,GAAQM,EAAOE,OAAO,UAAWR,GAGrC,IAAIS,SADmBC,EAAAA,EAAMC,IAAI,GAADtC,OAAIc,EAAG,cAAAd,OAAaiC,KACzBM,KAEvBX,IACFQ,EAAcA,EAAYI,MAAM,EAAGZ,IAGrCT,EAAYiB,EACd,CAAE,MAAOK,GACPlB,EAASkB,EAAIC,SACbC,QAAQrB,MAAM,2BAA4BmB,EAC5C,CAAC,QACCpB,GAAW,EACb,IACC,CAACxC,EAAU2C,EAAQC,EAAUC,EAAUC,EAAQC,KAElDgB,EAAAA,EAAAA,YAAU,KACJf,GACFC,GACF,GACC,CAACA,EAAeD,IAMnB,MAAO,CACLtD,WACAH,UACAkD,QACAuB,SARcd,EAAAA,EAAAA,cAAY,KAC1BD,GAAe,GACd,CAACA,IAOFA,gBAEJ,EAEaxD,EAAgBA,KAC3B,MAAOH,EAAY2E,IAAiB1B,EAAAA,EAAAA,UAAS,KACtChD,EAASiD,IAAcD,EAAAA,EAAAA,WAAS,IAChCE,EAAOC,IAAYH,EAAAA,EAAAA,UAAS,MAmBnC,OAjBAwB,EAAAA,EAAAA,YAAU,KACgBZ,WACtB,IACEX,GAAW,GACX,MAAM0B,QAAiBV,EAAAA,EAAMC,IAAI,GAADtC,OAAIc,EAAG,gBACvCgC,EAAcC,EAASR,KAAKpE,WAC9B,CAAE,MAAOsE,GACPlB,EAASkB,EAAIC,SACbC,QAAQrB,MAAM,6BAA8BmB,EAC9C,CAAC,QACCpB,GAAW,EACb,GAGF2B,EAAiB,GAChB,IAEI,CAAE7E,aAAYC,UAASkD,QAAO,EAG1B3C,EAAmBA,KAC9B,MAAOF,EAAewE,IAAoB7B,EAAAA,EAAAA,UAAS,CAAC,IAC7ChD,EAASiD,IAAcD,EAAAA,EAAAA,WAAS,IAChCE,EAAOC,IAAYH,EAAAA,EAAAA,UAAS,MAmBnC,OAjBAwB,EAAAA,EAAAA,YAAU,KACmBZ,WACzB,IACEX,GAAW,GACX,MAAM0B,QAAiBV,EAAAA,EAAMC,IAAI,GAADtC,OAAIc,EAAG,sBACvCmC,EAAiBF,EAASR,KAAKW,eACjC,CAAE,MAAOT,GACPlB,EAASkB,EAAIC,SACbC,QAAQrB,MAAM,iCAAkCmB,EAClD,CAAC,QACCpB,GAAW,EACb,GAGF8B,EAAoB,GACnB,IAEI,CAAE1E,gBAAeL,UAASkD,QAAO,C","sources":["components/Desktop/DesktopCategories.js","hooks/useProducts.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useCategories, useProducts, useCategoryStats } from '../../hooks/useProducts';\nimport LoadingSpinner from '../Common/LoadingSpinner';\n\nconst DesktopCategories = () => {\n  const navigate = useNavigate();\n  const { categories, loading: categoriesLoading } = useCategories();\n  const { products } = useProducts();\n  const { categoryStats, loading: statsLoading } = useCategoryStats();\n\n  const handleCategoryClick = (category) => {\n    navigate(`/products?category=${encodeURIComponent(category)}`);\n  };\n\n  const getCategoryIcon = (category) => {\n    const icons = {\n      '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞': 'üíª',\n      '–ú–æ–¥–∞ –∏ –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã': 'üëó',\n      '–ö—Ä–∞—Å–æ—Ç–∞ –∏ –∑–¥–æ—Ä–æ–≤—å–µ': 'üíÑ',\n      '–î–æ–º –∏ –±—ã—Ç': 'üè†',\n      '–°–ø–æ—Ä—Ç –∏ —Ñ–∏—Ç–Ω–µ—Å': '‚öΩ'\n    };\n    return icons[category] || 'üì¶';\n  };\n\n  const getCategoryColor = (category) => {\n    const colors = {\n      '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞': 'bg-blue-500',\n      '–ú–æ–¥–∞ –∏ –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã': 'bg-purple-500',\n      '–ö—Ä–∞—Å–æ—Ç–∞ –∏ –∑–¥–æ—Ä–æ–≤—å–µ': 'bg-pink-500',\n      '–î–æ–º –∏ –±—ã—Ç': 'bg-green-500',\n      '–°–ø–æ—Ä—Ç –∏ —Ñ–∏—Ç–Ω–µ—Å': 'bg-orange-500'\n    };\n    return colors[category] || 'bg-gray-500';\n  };\n\n  if (categoriesLoading || statsLoading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <LoadingSpinner size=\"large\" text=\"–ó–∞–≥—Ä—É–∂–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏...\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <div className=\"bg-white shadow-sm border-b\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\n          <div className=\"text-center\">\n            <h1 className=\"text-4xl font-bold text-gray-900 mb-4\">\n              –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤\n            </h1>\n            <p className=\"text-xl text-gray-600 max-w-2xl mx-auto\">\n              –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –∏–º–µ–Ω–Ω–æ —Ç–æ, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ\n            </p>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\n        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-12\">\n          <div className=\"bg-white rounded-xl shadow-sm p-6 text-center\">\n            <div className=\"text-3xl font-bold text-blue-600 mb-2\">\n              {categories.length}\n            </div>\n            <div className=\"text-gray-600\">–ö–∞—Ç–µ–≥–æ—Ä–∏–π —Ç–æ–≤–∞—Ä–æ–≤</div>\n          </div>\n          <div className=\"bg-white rounded-xl shadow-sm p-6 text-center\">\n            <div className=\"text-3xl font-bold text-green-600 mb-2\">\n              {products.length}\n            </div>\n            <div className=\"text-gray-600\">–í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤</div>\n          </div>\n          <div className=\"bg-white rounded-xl shadow-sm p-6 text-center\">\n            <div className=\"text-3xl font-bold text-purple-600 mb-2\">\n              {products.length > 0 ? Math.round(products.reduce((sum, p) => sum + p.price, 0) / products.length) : 0} ‚ÇΩ\n            </div>\n            <div className=\"text-gray-600\">–°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞</div>\n          </div>\n        </div>\n\n        {/* –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n          {categories.map((category) => {\n            const stats = categoryStats[category] || {};\n            return (\n              <div\n                key={category}\n                onClick={() => handleCategoryClick(category)}\n                className=\"bg-white rounded-xl shadow-sm hover:shadow-md transition-shadow duration-200 cursor-pointer group\"\n              >\n                <div className=\"p-6\">\n                  <div className=\"flex items-center mb-4\">\n                    <div className={`w-12 h-12 rounded-lg ${getCategoryColor(category)} flex items-center justify-center text-white text-2xl mr-4`}>\n                      {getCategoryIcon(category)}\n                    </div>\n                    <div>\n                      <h3 className=\"text-xl font-semibold text-gray-900 group-hover:text-blue-600 transition-colors\">\n                        {category}\n                      </h3>\n                      <p className=\"text-gray-600 text-sm\">\n                        {stats.count || 0} —Ç–æ–≤–∞—Ä–æ–≤\n                      </p>\n                    </div>\n                  </div>\n\n                  {stats.count > 0 && (\n                    <div className=\"space-y-2 mb-4\">\n                      <div className=\"flex justify-between text-sm\">\n                        <span className=\"text-gray-500\">–¶–µ–Ω–∞ –æ—Ç:</span>\n                        <span className=\"font-medium\">{Math.round(stats.min_price)} ‚ÇΩ</span>\n                      </div>\n                      <div className=\"flex justify-between text-sm\">\n                        <span className=\"text-gray-500\">–¶–µ–Ω–∞ –¥–æ:</span>\n                        <span className=\"font-medium\">{Math.round(stats.max_price)} ‚ÇΩ</span>\n                      </div>\n                      <div className=\"flex justify-between text-sm\">\n                        <span className=\"text-gray-500\">–°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞:</span>\n                        <span className=\"font-medium\">{Math.round(stats.avg_price)} ‚ÇΩ</span>\n                      </div>\n                    </div>\n                  )}\n\n                  <div className=\"flex items-center justify-between\">\n                    <button className=\"text-blue-600 hover:text-blue-700 font-medium text-sm group-hover:underline\">\n                      –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–æ–≤–∞—Ä—ã\n                    </button>\n                    <svg className=\"w-5 h-5 text-gray-400 group-hover:text-blue-600 transition-colors\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n                    </svg>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n\n        {/* –ë—ã—Å—Ç—Ä—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã */}\n        <div className=\"mt-16\">\n          <h2 className=\"text-2xl font-bold text-gray-900 mb-8 text-center\">\n            –ë—ã—Å—Ç—Ä—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã\n          </h2>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n            <div\n              onClick={() => navigate('/products?priceRange=under_1000')}\n              className=\"bg-white rounded-xl shadow-sm hover:shadow-md transition-shadow duration-200 cursor-pointer p-6 text-center group\"\n            >\n              <div className=\"text-3xl mb-3\">üí∞</div>\n              <h3 className=\"font-semibold text-gray-900 group-hover:text-blue-600 transition-colors\">\n                –î–æ 1 000 ‚ÇΩ\n              </h3>\n              <p className=\"text-sm text-gray-600 mt-2\">\n                –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã\n              </p>\n            </div>\n\n            <div\n              onClick={() => navigate('/products?priceRange=1000_5000')}\n              className=\"bg-white rounded-xl shadow-sm hover:shadow-md transition-shadow duration-200 cursor-pointer p-6 text-center group\"\n            >\n              <div className=\"text-3xl mb-3\">üíé</div>\n              <h3 className=\"font-semibold text-gray-900 group-hover:text-blue-600 transition-colors\">\n                1 000 - 5 000 ‚ÇΩ\n              </h3>\n              <p className=\"text-sm text-gray-600 mt-2\">\n                –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã\n              </p>\n            </div>\n\n            <div\n              onClick={() => navigate('/products?priceRange=5000_20000')}\n              className=\"bg-white rounded-xl shadow-sm hover:shadow-md transition-shadow duration-200 cursor-pointer p-6 text-center group\"\n            >\n              <div className=\"text-3xl mb-3\">‚≠ê</div>\n              <h3 className=\"font-semibold text-gray-900 group-hover:text-blue-600 transition-colors\">\n                5 000 - 20 000 ‚ÇΩ\n              </h3>\n              <p className=\"text-sm text-gray-600 mt-2\">\n                –ü—Ä–µ–º–∏—É–º —Ç–æ–≤–∞—Ä—ã\n              </p>\n            </div>\n\n            <div\n              onClick={() => navigate('/products?priceRange=over_20000')}\n              className=\"bg-white rounded-xl shadow-sm hover:shadow-md transition-shadow duration-200 cursor-pointer p-6 text-center group\"\n            >\n              <div className=\"text-3xl mb-3\">üëë</div>\n              <h3 className=\"font-semibold text-gray-900 group-hover:text-blue-600 transition-colors\">\n                –°–≤—ã—à–µ 20 000 ‚ÇΩ\n              </h3>\n              <p className=\"text-sm text-gray-600 mt-2\">\n                –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DesktopCategories;","import { useState, useEffect, useCallback, useMemo } from 'react';\nimport axios from 'axios';\n\nconst BACKEND_URL = process.env.REACT_APP_BACKEND_URL;\nconst API = `${BACKEND_URL}/api`;\n\nexport const useProducts = (options = {}) => {\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const {\n    category = null,\n    search = null,\n    minPrice = null,\n    maxPrice = null,\n    sortBy = null,\n    limit = null,\n    autoFetch = true\n  } = options;\n\n  const fetchProducts = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      const params = new URLSearchParams();\n      if (category) params.append('category', category);\n      if (search) params.append('search', search);\n      if (minPrice) params.append('min_price', minPrice);\n      if (maxPrice) params.append('max_price', maxPrice);\n      if (sortBy) params.append('sort_by', sortBy);\n\n      const response = await axios.get(`${API}/products?${params}`);\n      let productData = response.data;\n\n      if (limit) {\n        productData = productData.slice(0, limit);\n      }\n\n      setProducts(productData);\n    } catch (err) {\n      setError(err.message);\n      console.error('Error fetching products:', err);\n    } finally {\n      setLoading(false);\n    }\n  }, [category, search, minPrice, maxPrice, sortBy, limit]);\n\n  useEffect(() => {\n    if (autoFetch) {\n      fetchProducts();\n    }\n  }, [fetchProducts, autoFetch]);\n\n  const refetch = useCallback(() => {\n    fetchProducts();\n  }, [fetchProducts]);\n\n  return {\n    products,\n    loading,\n    error,\n    refetch,\n    fetchProducts\n  };\n};\n\nexport const useCategories = () => {\n  const [categories, setCategories] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchCategories = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get(`${API}/categories`);\n        setCategories(response.data.categories);\n      } catch (err) {\n        setError(err.message);\n        console.error('Error fetching categories:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchCategories();\n  }, []);\n\n  return { categories, loading, error };\n};\n\nexport const useCategoryStats = () => {\n  const [categoryStats, setCategoryStats] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchCategoryStats = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get(`${API}/categories/stats`);\n        setCategoryStats(response.data.category_stats);\n      } catch (err) {\n        setError(err.message);\n        console.error('Error fetching category stats:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchCategoryStats();\n  }, []);\n\n  return { categoryStats, loading, error };\n};"],"names":["DesktopCategories","navigate","useNavigate","categories","loading","categoriesLoading","useCategories","products","useProducts","categoryStats","statsLoading","useCategoryStats","getCategoryIcon","category","getCategoryColor","_jsx","className","children","LoadingSpinner","size","text","_jsxs","length","Math","round","reduce","sum","p","price","map","stats","onClick","concat","encodeURIComponent","handleCategoryClick","count","min_price","max_price","avg_price","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","API","process","options","arguments","undefined","setProducts","useState","setLoading","error","setError","search","minPrice","maxPrice","sortBy","limit","autoFetch","fetchProducts","useCallback","async","params","URLSearchParams","append","productData","axios","get","data","slice","err","message","console","useEffect","refetch","setCategories","response","fetchCategories","setCategoryStats","category_stats","fetchCategoryStats"],"sourceRoot":""}