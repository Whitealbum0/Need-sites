{"version":3,"file":"static/js/394.8096adb2.chunk.js","mappings":"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","sources":["components/Common/CartButton.js","components/Common/ProductCard.js","components/Desktop/DesktopProducts.js","hooks/useProducts.js","utils/helpers.js"],"sourcesContent":["import React from 'react';\nimport { useCart } from '../../contexts/CartContext';\n\nconst CartButton = ({ product, variant = 'primary' }) => {\n  const { addItem, getItemQuantity, updateQuantity } = useCart();\n  const quantity = getItemQuantity(product.id);\n\n  const handleAddToCart = () => {\n    addItem(product);\n  };\n\n  const handleIncrement = () => {\n    updateQuantity(product.id, quantity + 1);\n  };\n\n  const handleDecrement = () => {\n    if (quantity > 1) {\n      updateQuantity(product.id, quantity - 1);\n    } else {\n      updateQuantity(product.id, 0);\n    }\n  };\n\n  if (quantity === 0) {\n    return (\n      <button\n        onClick={handleAddToCart}\n        className={`\n          ${variant === 'primary' \n            ? 'bg-blue-600 hover:bg-blue-700 text-white' \n            : 'bg-white hover:bg-gray-50 text-blue-600 border border-blue-600'\n          }\n          px-4 py-2 rounded-lg font-medium transition-colors duration-200 flex items-center justify-center space-x-2\n        `}\n      >\n        <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 3h2l.4 2M7 13h10l4-8H5.4m0 0L7 13m0 0l-1.1 5A2 2 0 007.83 20H16a2 2 0 001.95-1.55L19 13M7 13v6a2 2 0 002 2h6a2 2 0 002-2v-6M12 10v4m-2-2h4\" />\n        </svg>\n        <span>В корзину</span>\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"flex items-center space-x-2\">\n      <button\n        onClick={handleDecrement}\n        className=\"w-8 h-8 bg-gray-200 hover:bg-gray-300 rounded-full flex items-center justify-center transition-colors\"\n      >\n        <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M20 12H4\" />\n        </svg>\n      </button>\n      \n      <span className=\"w-8 text-center font-medium\">{quantity}</span>\n      \n      <button\n        onClick={handleIncrement}\n        className=\"w-8 h-8 bg-blue-600 hover:bg-blue-700 text-white rounded-full flex items-center justify-center transition-colors\"\n      >\n        <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\n        </svg>\n      </button>\n    </div>\n  );\n};\n\nexport default CartButton;","import React from 'react';\nimport { formatPrice, truncateText } from '../../utils/helpers';\nimport CartButton from './CartButton';\n\nconst ProductCard = ({ \n  product, \n  variant = 'default', \n  showFullDescription = false,\n  onAddToFavorites = null \n}) => {\n  if (!product) return null;\n\n  const handleAddToFavorites = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (onAddToFavorites) {\n      onAddToFavorites(product);\n    }\n  };\n\n  // Десктопная версия карточки\n  if (variant === 'desktop') {\n    return (\n      <div className=\"bg-white rounded-xl shadow-lg overflow-hidden hover:shadow-2xl transition-all duration-300 transform hover:-translate-y-2 h-full group\">\n        <div className=\"relative overflow-hidden\">\n          {product.images && product.images.length > 0 ? (\n            <img \n              src={`data:image/jpeg;base64,${product.images[0]}`}\n              alt={product.name}\n              className=\"w-full h-72 object-cover transition-transform duration-300 group-hover:scale-110\"\n            />\n          ) : (\n            <div className=\"w-full h-72 bg-gradient-to-br from-gray-200 to-gray-300 flex items-center justify-center\">\n              <svg className=\"w-16 h-16 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n              </svg>\n            </div>\n          )}\n          \n          <div className=\"absolute top-4 right-4 opacity-0 group-hover:opacity-100 transition-opacity\">\n            {onAddToFavorites && (\n              <button\n                onClick={handleAddToFavorites}\n                className=\"bg-white/90 hover:bg-white text-red-500 p-2 rounded-full shadow-lg transition-all\"\n              >\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\" />\n                </svg>\n              </button>\n            )}\n          </div>\n\n          {product.stock === 0 && (\n            <div className=\"absolute inset-0 bg-black bg-opacity-50 flex items-center justify-center\">\n              <span className=\"bg-red-500 text-white px-4 py-2 rounded-lg font-semibold\">\n                Нет в наличии\n              </span>\n            </div>\n          )}\n        </div>\n        \n        <div className=\"p-6\">\n          <h3 className=\"text-xl font-semibold mb-3 line-clamp-2\">{product.name}</h3>\n          <p className=\"text-gray-600 mb-4 line-clamp-3 text-sm leading-relaxed\">\n            {showFullDescription ? product.description : truncateText(product.description, 100)}\n          </p>\n          \n          <div className=\"flex justify-between items-center mb-4\">\n            <div>\n              <span className=\"text-2xl font-bold text-blue-600\">\n                {formatPrice(product.price)}\n              </span>\n              <div className=\"text-sm text-gray-500\">\n                {product.category}\n              </div>\n            </div>\n            <div className=\"flex items-center space-x-1\">\n              {[...Array(5)].map((_, i) => (\n                <svg key={i} className=\"w-4 h-4 text-yellow-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\n                </svg>\n              ))}\n            </div>\n          </div>\n          \n          <div className=\"space-y-2\">\n            <a \n              href={`/products/${product.id}`}\n              className=\"w-full bg-gradient-to-r from-blue-600 to-purple-600 text-white px-6 py-3 rounded-lg font-semibold hover:from-blue-700 hover:to-purple-700 transition-all duration-300 text-center block shadow-lg hover:shadow-xl\"\n            >\n              Подробнее\n            </a>\n            \n            {product.stock > 0 && (\n              <CartButton product={product} variant=\"secondary\" />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // Мобильная версия карточки\n  if (variant === 'mobile') {\n    return (\n      <div className=\"bg-gray-50 rounded-xl overflow-hidden shadow-sm hover:shadow-md transition-shadow\">\n        <div className=\"flex\">\n          {product.images && product.images.length > 0 ? (\n            <img \n              src={`data:image/jpeg;base64,${product.images[0]}`}\n              alt={product.name}\n              className=\"w-24 h-24 object-cover flex-shrink-0\"\n            />\n          ) : (\n            <div className=\"w-24 h-24 bg-gray-200 flex items-center justify-center flex-shrink-0\">\n              <svg className=\"w-8 h-8 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n              </svg>\n            </div>\n          )}\n          \n          <div className=\"flex-1 p-4\">\n            <h3 className=\"font-semibold text-gray-900 mb-1 line-clamp-2 text-sm\">\n              {product.name}\n            </h3>\n            <p className=\"text-xs text-gray-600 mb-2 line-clamp-2\">\n              {truncateText(product.description, 80)}\n            </p>\n            \n            <div className=\"flex justify-between items-center\">\n              <div>\n                <span className=\"text-lg font-bold text-blue-600\">\n                  {formatPrice(product.price)}\n                </span>\n                <div className=\"text-xs text-gray-500\">\n                  {product.category}\n                </div>\n              </div>\n              \n              <div className=\"flex space-x-2\">\n                {product.stock > 0 ? (\n                  <CartButton product={product} variant=\"primary\" />\n                ) : (\n                  <span className=\"text-sm text-red-600\">Нет в наличии</span>\n                )}\n                \n                <a \n                  href={`/products/${product.id}`}\n                  className=\"bg-blue-600 text-white px-3 py-2 rounded-lg text-xs font-semibold hover:bg-blue-700 transition-colors\"\n                >\n                  Купить\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // Стандартная версия карточки\n  return (\n    <div className=\"bg-white rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-shadow\">\n      {product.images && product.images.length > 0 ? (\n        <img \n          src={`data:image/jpeg;base64,${product.images[0]}`}\n          alt={product.name}\n          className=\"w-full h-48 object-cover\"\n        />\n      ) : (\n        <div className=\"w-full h-48 bg-gray-200 flex items-center justify-center\">\n          <span className=\"text-gray-400\">Нет изображения</span>\n        </div>\n      )}\n      \n      <div className=\"p-4\">\n        <h3 className=\"text-lg font-semibold mb-2\">{product.name}</h3>\n        <p className=\"text-gray-600 text-sm mb-3 line-clamp-2\">\n          {truncateText(product.description, 100)}\n        </p>\n        \n        <div className=\"flex justify-between items-center\">\n          <span className=\"text-xl font-bold text-blue-600\">\n            {formatPrice(product.price)}\n          </span>\n          <a \n            href={`/products/${product.id}`}\n            className=\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 transition-colors text-sm\"\n          >\n            Подробнее\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductCard;","import React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { useProducts, useCategories } from '../../hooks/useProducts';\nimport ProductCard from '../Common/ProductCard';\nimport LoadingSpinner from '../Common/LoadingSpinner';\n\nconst DesktopProducts = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [selectedCategory, setSelectedCategory] = useState(searchParams.get('category') || '');\n  const [searchTerm, setSearchTerm] = useState(searchParams.get('search') || '');\n  const [sortBy, setSortBy] = useState(searchParams.get('sort') || 'name');\n  const [priceRange, setPriceRange] = useState(searchParams.get('priceRange') || 'all');\n  const [isFilterOpen, setIsFilterOpen] = useState(false);\n\n  const { products, loading, error, refetch } = useProducts({\n    category: selectedCategory,\n    search: searchTerm\n  });\n\n  const { categories } = useCategories();\n\n  // Синхронизация с URL параметрами\n  useEffect(() => {\n    const params = new URLSearchParams();\n    if (selectedCategory) params.set('category', selectedCategory);\n    if (searchTerm) params.set('search', searchTerm);\n    if (sortBy !== 'name') params.set('sort', sortBy);\n    if (priceRange !== 'all') params.set('priceRange', priceRange);\n    \n    setSearchParams(params);\n  }, [selectedCategory, searchTerm, sortBy, priceRange, setSearchParams]);\n\n  // Обновление состояния при изменении URL\n  useEffect(() => {\n    const categoryParam = searchParams.get('category');\n    const searchParam = searchParams.get('search');\n    const sortParam = searchParams.get('sort');\n    const priceParam = searchParams.get('priceRange');\n    \n    if (categoryParam !== selectedCategory) setSelectedCategory(categoryParam || '');\n    if (searchParam !== searchTerm) setSearchTerm(searchParam || '');\n    if (sortParam !== sortBy) setSortBy(sortParam || 'name');\n    if (priceParam !== priceRange) setPriceRange(priceParam || 'all');\n  }, [searchParams]);\n\n  // Функция сортировки товаров\n  const sortProducts = (products) => {\n    const sortedProducts = [...products];\n    \n    switch (sortBy) {\n      case 'price_low':\n        return sortedProducts.sort((a, b) => a.price - b.price);\n      case 'price_high':\n        return sortedProducts.sort((a, b) => b.price - a.price);\n      case 'name':\n        return sortedProducts.sort((a, b) => a.name.localeCompare(b.name));\n      case 'newest':\n        return sortedProducts.sort((a, b) => new Date(b.created_at) - new Date(a.created_at));\n      default:\n        return sortedProducts;\n    }\n  };\n\n  // Функция фильтрации по цене\n  const filterByPrice = (products) => {\n    if (priceRange === 'all') return products;\n    \n    return products.filter(product => {\n      const price = product.price;\n      switch (priceRange) {\n        case 'under_1000':\n          return price < 1000;\n        case '1000_5000':\n          return price >= 1000 && price <= 5000;\n        case '5000_20000':\n          return price >= 5000 && price <= 20000;\n        case 'over_20000':\n          return price > 20000;\n        default:\n          return true;\n      }\n    });\n  };\n\n  const filteredAndSortedProducts = sortProducts(filterByPrice(products));\n\n  const clearFilters = () => {\n    setSelectedCategory('');\n    setSearchTerm('');\n    setSortBy('name');\n    setPriceRange('all');\n    setSearchParams({});\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <div className=\"bg-white shadow-sm border-b\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <div className=\"text-center\">\n            <h1 className=\"text-4xl font-bold text-gray-900 mb-4\">\n              Каталог товаров\n            </h1>\n            <p className=\"text-xl text-gray-600 max-w-2xl mx-auto\">\n              Откройте для себя широкий ассортимент качественных товаров\n            </p>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"flex gap-8\">\n          {/* Sidebar с фильтрами */}\n          <div className=\"w-80 flex-shrink-0\">\n            <div className=\"bg-white rounded-xl shadow-sm p-6 sticky top-8\">\n              <div className=\"flex items-center justify-between mb-6\">\n                <h2 className=\"text-xl font-semibold text-gray-900\">Фильтры</h2>\n                <button\n                  onClick={clearFilters}\n                  className=\"text-blue-600 hover:text-blue-800 text-sm font-medium\"\n                >\n                  Очистить всё\n                </button>\n              </div>\n\n              {/* Поиск */}\n              <div className=\"mb-6\">\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Поиск товаров\n                </label>\n                <div className=\"relative\">\n                  <input\n                    type=\"text\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                    placeholder=\"Введите название товара...\"\n                    className=\"w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  />\n                  <svg className=\"absolute left-3 top-3.5 h-5 w-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n                  </svg>\n                </div>\n              </div>\n\n              {/* Категории */}\n              <div className=\"mb-6\">\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Категория\n                </label>\n                <select\n                  value={selectedCategory}\n                  onChange={(e) => setSelectedCategory(e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white\"\n                >\n                  <option value=\"\">Все категории</option>\n                  {categories.map((category) => (\n                    <option key={category} value={category}>\n                      {category}\n                    </option>\n                  ))}\n                </select>\n              </div>\n\n              {/* Диапазон цен */}\n              <div className=\"mb-6\">\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Цена\n                </label>\n                <select\n                  value={priceRange}\n                  onChange={(e) => setPriceRange(e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white\"\n                >\n                  <option value=\"all\">Любая цена</option>\n                  <option value=\"under_1000\">До 1 000 ₽</option>\n                  <option value=\"1000_5000\">1 000 - 5 000 ₽</option>\n                  <option value=\"5000_20000\">5 000 - 20 000 ₽</option>\n                  <option value=\"over_20000\">Свыше 20 000 ₽</option>\n                </select>\n              </div>\n\n              {/* Сортировка */}\n              <div className=\"mb-6\">\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Сортировка\n                </label>\n                <select\n                  value={sortBy}\n                  onChange={(e) => setSortBy(e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white\"\n                >\n                  <option value=\"name\">По названию</option>\n                  <option value=\"price_low\">Сначала дешёвые</option>\n                  <option value=\"price_high\">Сначала дорогие</option>\n                  <option value=\"newest\">Сначала новые</option>\n                </select>\n              </div>\n\n              {/* Статистика */}\n              <div className=\"bg-blue-50 rounded-lg p-4\">\n                <div className=\"flex items-center space-x-2 mb-2\">\n                  <svg className=\"w-5 h-5 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                  </svg>\n                  <span className=\"text-sm font-medium text-blue-900\">\n                    Найдено товаров: {filteredAndSortedProducts.length}\n                  </span>\n                </div>\n                <div className=\"text-xs text-blue-700\">\n                  {selectedCategory && `Категория: ${selectedCategory}`}\n                  {searchTerm && ` • Поиск: \"${searchTerm}\"`}\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Основной контент */}\n          <div className=\"flex-1\">\n            {loading ? (\n              <div className=\"flex justify-center items-center h-64\">\n                <LoadingSpinner size=\"large\" text=\"Загружаем товары...\" />\n              </div>\n            ) : error ? (\n              <div className=\"text-center py-12\">\n                <div className=\"text-red-600 mb-4\">\n                  <svg className=\"w-16 h-16 mx-auto mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                  </svg>\n                  <h3 className=\"text-lg font-semibold\">Ошибка загрузки</h3>\n                  <p className=\"text-gray-600 mt-2\">{error}</p>\n                </div>\n                <button\n                  onClick={refetch}\n                  className=\"bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-colors\"\n                >\n                  Попробовать снова\n                </button>\n              </div>\n            ) : filteredAndSortedProducts.length === 0 ? (\n              <div className=\"text-center py-16\">\n                <div className=\"text-gray-400 mb-4\">\n                  <svg className=\"w-20 h-20 mx-auto mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M20 13V6a2 2 0 00-2-2H6a2 2 0 00-2 2v7m16 0v5a2 2 0 01-2 2H6a2 2 0 01-2-2v-5m16 0h-2.586a1 1 0 00-.707.293l-2.414 2.414a1 1 0 01-.707.293h-3.172a1 1 0 01-.707-.293l-2.414-2.414A1 1 0 006.586 13H4\" />\n                  </svg>\n                  <h3 className=\"text-xl font-semibold text-gray-600 mb-2\">\n                    Товары не найдены\n                  </h3>\n                  <p className=\"text-gray-500 mb-4\">\n                    Попробуйте изменить параметры поиска или фильтры\n                  </p>\n                  <button\n                    onClick={clearFilters}\n                    className=\"bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-colors\"\n                  >\n                    Сбросить фильтры\n                  </button>\n                </div>\n              </div>\n            ) : (\n              <div className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-6\">\n                {filteredAndSortedProducts.map((product) => (\n                  <ProductCard\n                    key={product.id}\n                    product={product}\n                    variant=\"desktop\"\n                    onAddToFavorites={(product) => console.log('Add to favorites:', product)}\n                  />\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DesktopProducts;","import { useState, useEffect, useCallback, useMemo } from 'react';\nimport axios from 'axios';\n\nconst BACKEND_URL = process.env.REACT_APP_BACKEND_URL;\nconst API = `${BACKEND_URL}/api`;\n\nexport const useProducts = (options = {}) => {\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const {\n    category = null,\n    search = null,\n    minPrice = null,\n    maxPrice = null,\n    sortBy = null,\n    limit = null,\n    autoFetch = true\n  } = options;\n\n  const fetchProducts = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      const params = new URLSearchParams();\n      if (category) params.append('category', category);\n      if (search) params.append('search', search);\n      if (minPrice) params.append('min_price', minPrice);\n      if (maxPrice) params.append('max_price', maxPrice);\n      if (sortBy) params.append('sort_by', sortBy);\n\n      const response = await axios.get(`${API}/products?${params}`);\n      let productData = response.data;\n\n      if (limit) {\n        productData = productData.slice(0, limit);\n      }\n\n      setProducts(productData);\n    } catch (err) {\n      setError(err.message);\n      console.error('Error fetching products:', err);\n    } finally {\n      setLoading(false);\n    }\n  }, [category, search, minPrice, maxPrice, sortBy, limit]);\n\n  useEffect(() => {\n    if (autoFetch) {\n      fetchProducts();\n    }\n  }, [fetchProducts, autoFetch]);\n\n  const refetch = useCallback(() => {\n    fetchProducts();\n  }, [fetchProducts]);\n\n  return {\n    products,\n    loading,\n    error,\n    refetch,\n    fetchProducts\n  };\n};\n\nexport const useCategories = () => {\n  const [categories, setCategories] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchCategories = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get(`${API}/categories`);\n        setCategories(response.data.categories);\n      } catch (err) {\n        setError(err.message);\n        console.error('Error fetching categories:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchCategories();\n  }, []);\n\n  return { categories, loading, error };\n};\n\nexport const useCategoryStats = () => {\n  const [categoryStats, setCategoryStats] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchCategoryStats = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get(`${API}/categories/stats`);\n        setCategoryStats(response.data.category_stats);\n      } catch (err) {\n        setError(err.message);\n        console.error('Error fetching category stats:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchCategoryStats();\n  }, []);\n\n  return { categoryStats, loading, error };\n};","// Утилиты для определения типа устройства\nexport const detectDevice = () => {\n  const userAgent = navigator.userAgent || navigator.vendor || window.opera;\n  \n  const isAndroid = /android/i.test(userAgent);\n  const isIOS = /iPad|iPhone|iPod/.test(userAgent) && !window.MSStream;\n  const isMobile = isAndroid || isIOS || window.innerWidth <= 768;\n  const isTablet = window.innerWidth > 768 && window.innerWidth <= 1024;\n  const isDesktop = window.innerWidth > 1024;\n\n  return {\n    isAndroid,\n    isIOS,\n    isMobile,\n    isTablet,\n    isDesktop,\n    screenWidth: window.innerWidth,\n    screenHeight: window.innerHeight\n  };\n};\n\n// Утилита для форматирования цен\nexport const formatPrice = (price) => {\n  if (typeof price !== 'number') {\n    return '0 ₽';\n  }\n  \n  return new Intl.NumberFormat('ru-RU', {\n    style: 'currency',\n    currency: 'RUB',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 2\n  }).format(price);\n};\n\n// Утилита для обрезки текста\nexport const truncateText = (text, maxLength) => {\n  if (!text || text.length <= maxLength) {\n    return text;\n  }\n  \n  return text.substr(0, maxLength) + '...';\n};\n\n// Утилита для дебаунса\nexport const debounce = (func, wait) => {\n  let timeout;\n  \n  return function executedFunction(...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n    \n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n};\n\n// Утилита для проверки валидности email\nexport const isValidEmail = (email) => {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(email);\n};\n\n// Утилита для генерации случайного ID\nexport const generateId = () => {\n  return Math.random().toString(36).substr(2, 9);\n};\n\n// Утилита для определения размера экрана\nexport const getScreenSize = () => {\n  const width = window.innerWidth;\n  \n  if (width < 640) return 'xs';\n  if (width < 768) return 'sm';\n  if (width < 1024) return 'md';\n  if (width < 1280) return 'lg';\n  if (width < 1536) return 'xl';\n  return '2xl';\n};\n\n// Утилита для сохранения в localStorage с проверкой\nexport const saveToStorage = (key, value) => {\n  try {\n    localStorage.setItem(key, JSON.stringify(value));\n    return true;\n  } catch (error) {\n    console.error('Error saving to localStorage:', error);\n    return false;\n  }\n};\n\n// Утилита для получения из localStorage с проверкой\nexport const getFromStorage = (key, defaultValue = null) => {\n  try {\n    const item = localStorage.getItem(key);\n    return item ? JSON.parse(item) : defaultValue;\n  } catch (error) {\n    console.error('Error reading from localStorage:', error);\n    return defaultValue;\n  }\n};\n\n// Утилита для очистки localStorage\nexport const clearStorage = (key) => {\n  try {\n    localStorage.removeItem(key);\n    return true;\n  } catch (error) {\n    console.error('Error clearing localStorage:', error);\n    return false;\n  }\n};"],"names":["_ref","product","variant","addItem","getItemQuantity","updateQuantity","useCart","quantity","id","handleAddToCart","_jsxs","onClick","className","concat","children","_jsx","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","handleDecrement","handleIncrement","showFullDescription","onAddToFavorites","handleAddToFavorites","e","preventDefault","stopPropagation","images","length","src","alt","name","stock","description","truncateText","formatPrice","price","category","Array","map","_","i","href","CartButton","DesktopProducts","searchParams","setSearchParams","useSearchParams","selectedCategory","setSelectedCategory","useState","get","searchTerm","setSearchTerm","sortBy","setSortBy","priceRange","setPriceRange","isFilterOpen","setIsFilterOpen","products","loading","error","refetch","useProducts","search","categories","useCategories","useEffect","params","URLSearchParams","set","categoryParam","searchParam","sortParam","priceParam","filteredAndSortedProducts","sortedProducts","sort","a","b","localeCompare","Date","created_at","sortProducts","filter","filterByPrice","clearFilters","type","value","onChange","target","placeholder","LoadingSpinner","size","text","ProductCard","console","log","API","process","options","arguments","undefined","setProducts","setLoading","setError","minPrice","maxPrice","limit","autoFetch","fetchProducts","useCallback","async","append","productData","axios","data","slice","err","message","setCategories","response","fetchCategories","useCategoryStats","categoryStats","setCategoryStats","category_stats","fetchCategoryStats","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","maxLength","substr"],"sourceRoot":""}