{"version":3,"file":"static/js/816.25691436.chunk.js","mappings":"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","sources":["components/Common/CartButton.js","components/Common/ContactInfo.js","components/Desktop/DesktopCart.js","utils/helpers.js"],"sourcesContent":["import React from 'react';\nimport { useCart } from '../../contexts/CartContext';\n\nconst CartButton = ({ product, variant = 'primary' }) => {\n  const { addItem, getItemQuantity, updateQuantity } = useCart();\n  const quantity = getItemQuantity(product.id);\n\n  const handleAddToCart = () => {\n    addItem(product);\n  };\n\n  const handleIncrement = () => {\n    updateQuantity(product.id, quantity + 1);\n  };\n\n  const handleDecrement = () => {\n    if (quantity > 1) {\n      updateQuantity(product.id, quantity - 1);\n    } else {\n      updateQuantity(product.id, 0);\n    }\n  };\n\n  if (quantity === 0) {\n    return (\n      <button\n        onClick={handleAddToCart}\n        className={`\n          ${variant === 'primary' \n            ? 'bg-blue-600 hover:bg-blue-700 text-white' \n            : 'bg-white hover:bg-gray-50 text-blue-600 border border-blue-600'\n          }\n          px-4 py-2 rounded-lg font-medium transition-colors duration-200 flex items-center justify-center space-x-2\n        `}\n      >\n        <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 3h2l.4 2M7 13h10l4-8H5.4m0 0L7 13m0 0l-1.1 5A2 2 0 007.83 20H16a2 2 0 001.95-1.55L19 13M7 13v6a2 2 0 002 2h6a2 2 0 002-2v-6M12 10v4m-2-2h4\" />\n        </svg>\n        <span>В корзину</span>\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"flex items-center space-x-2\">\n      <button\n        onClick={handleDecrement}\n        className=\"w-8 h-8 bg-gray-200 hover:bg-gray-300 rounded-full flex items-center justify-center transition-colors\"\n      >\n        <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M20 12H4\" />\n        </svg>\n      </button>\n      \n      <span className=\"w-8 text-center font-medium\">{quantity}</span>\n      \n      <button\n        onClick={handleIncrement}\n        className=\"w-8 h-8 bg-blue-600 hover:bg-blue-700 text-white rounded-full flex items-center justify-center transition-colors\"\n      >\n        <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\n        </svg>\n      </button>\n    </div>\n  );\n};\n\nexport default CartButton;","import React from 'react';\n\nconst ContactInfo = ({ variant = 'desktop' }) => {\n  const isMobile = variant === 'mobile';\n  \n  return (\n    <div className={`${isMobile ? 'space-y-2' : 'space-y-4'}`}>\n      <div className={`${isMobile ? 'text-sm' : 'text-base'} font-medium text-gray-900 mb-2`}>\n        Свяжитесь с нами\n      </div>\n      \n      <div className=\"space-y-2\">\n        <a \n          href=\"tel:+78001234567\" \n          className={`flex items-center space-x-2 text-blue-600 hover:text-blue-800 transition-colors ${isMobile ? 'text-sm' : 'text-base'}`}\n        >\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z\" />\n          </svg>\n          <span>8 (800) 123-45-67</span>\n        </a>\n        \n        <a \n          href=\"mailto:info@shop.com\" \n          className={`flex items-center space-x-2 text-blue-600 hover:text-blue-800 transition-colors ${isMobile ? 'text-sm' : 'text-base'}`}\n        >\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\n          </svg>\n          <span>info@shop.com</span>\n        </a>\n        \n        <div className={`flex items-center space-x-2 text-gray-600 ${isMobile ? 'text-sm' : 'text-base'}`}>\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n          </svg>\n          <span>Работаем 24/7</span>\n        </div>\n      </div>\n      \n      <div className={`pt-2 ${isMobile ? 'text-xs' : 'text-sm'} text-gray-500`}>\n        Бесплатная доставка от 2000 ₽\n      </div>\n    </div>\n  );\n};\n\nexport default ContactInfo;","import React from 'react';\nimport { useCart } from '../../contexts/CartContext';\nimport { formatPrice } from '../../utils/helpers';\nimport CartButton from '../Common/CartButton';\nimport ContactInfo from '../Common/ContactInfo';\n\nconst DesktopCart = () => {\n  const { items, getTotalPrice, clearCart } = useCart();\n\n  if (items.length === 0) {\n    return (\n      <div className=\"min-h-screen bg-gray-50\">\n        <div className=\"bg-white shadow-sm border-b\">\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n            <div className=\"text-center\">\n              <h1 className=\"text-4xl font-bold text-gray-900 mb-4\">\n                Корзина\n              </h1>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16\">\n          <div className=\"text-center\">\n            <div className=\"text-gray-400 mb-8\">\n              <svg className=\"w-24 h-24 mx-auto mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 3h2l.4 2M7 13h10l4-8H5.4m0 0L7 13m0 0l-1.1 5A2 2 0 007.83 20H16a2 2 0 001.95-1.55L19 13M7 13v6a2 2 0 002 2h6a2 2 0 002-2v-6\" />\n              </svg>\n            </div>\n            <h2 className=\"text-2xl font-semibold text-gray-900 mb-4\">\n              Корзина пуста\n            </h2>\n            <p className=\"text-gray-600 mb-8\">\n              Добавьте товары в корзину, чтобы оформить заказ\n            </p>\n            <a \n              href=\"/products\"\n              className=\"inline-flex items-center px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n            >\n              <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 3h2l.4 2M7 13h10l4-8H5.4m0 0L7 13m0 0l-1.1 5A2 2 0 007.83 20H16a2 2 0 001.95-1.55L19 13M7 13v6a2 2 0 002 2h6a2 2 0 002-2v-6\" />\n              </svg>\n              Перейти к покупкам\n            </a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <div className=\"bg-white shadow-sm border-b\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <div className=\"text-center\">\n            <h1 className=\"text-4xl font-bold text-gray-900 mb-4\">\n              Корзина\n            </h1>\n            <p className=\"text-xl text-gray-600\">\n              {items.length} товара на сумму {formatPrice(getTotalPrice())}\n            </p>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n          {/* Товары в корзине */}\n          <div className=\"lg:col-span-2\">\n            <div className=\"bg-white rounded-xl shadow-sm p-6 mb-6\">\n              <div className=\"flex items-center justify-between mb-6\">\n                <h2 className=\"text-xl font-semibold text-gray-900\">\n                  Товары в корзине\n                </h2>\n                <button\n                  onClick={clearCart}\n                  className=\"text-red-600 hover:text-red-700 text-sm font-medium\"\n                >\n                  Очистить корзину\n                </button>\n              </div>\n\n              <div className=\"space-y-4\">\n                {items.map((item) => (\n                  <div key={item.id} className=\"flex items-center space-x-4 p-4 border border-gray-200 rounded-lg\">\n                    <div className=\"w-20 h-20 flex-shrink-0 overflow-hidden rounded-lg\">\n                      {item.images && item.images.length > 0 ? (\n                        <img \n                          src={`data:image/jpeg;base64,${item.images[0]}`}\n                          alt={item.name}\n                          className=\"w-full h-full object-cover\"\n                        />\n                      ) : (\n                        <div className=\"w-full h-full bg-gray-200 flex items-center justify-center\">\n                          <svg className=\"w-8 h-8 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n                          </svg>\n                        </div>\n                      )}\n                    </div>\n\n                    <div className=\"flex-1 min-w-0\">\n                      <h3 className=\"text-lg font-semibold text-gray-900 truncate\">\n                        {item.name}\n                      </h3>\n                      <p className=\"text-sm text-gray-600 mt-1\">\n                        {item.category}\n                      </p>\n                      <div className=\"text-lg font-bold text-gray-900 mt-2\">\n                        {formatPrice(item.price)}\n                      </div>\n                    </div>\n\n                    <div className=\"flex flex-col items-end space-y-2\">\n                      <CartButton product={item} variant=\"secondary\" />\n                      <div className=\"text-sm text-gray-600\">\n                        Сумма: {formatPrice(item.price * item.quantity)}\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          {/* Оформление заказа */}\n          <div className=\"lg:col-span-1\">\n            <div className=\"bg-white rounded-xl shadow-sm p-6 mb-6\">\n              <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">\n                Итого\n              </h2>\n              \n              <div className=\"space-y-2 mb-4\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">Товары:</span>\n                  <span className=\"font-medium\">{formatPrice(getTotalPrice())}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">Доставка:</span>\n                  <span className=\"font-medium text-green-600\">Бесплатно</span>\n                </div>\n                <div className=\"border-t pt-2\">\n                  <div className=\"flex justify-between text-lg font-bold\">\n                    <span>Итого:</span>\n                    <span>{formatPrice(getTotalPrice())}</span>\n                  </div>\n                </div>\n              </div>\n\n              <button className=\"w-full bg-blue-600 text-white py-3 rounded-lg font-semibold hover:bg-blue-700 transition-colors mb-4\">\n                Оформить заказ\n              </button>\n\n              <div className=\"text-xs text-gray-500\">\n                Нажимая \"Оформить заказ\", вы соглашаетесь с условиями оферты\n              </div>\n            </div>\n\n            {/* Контактная информация */}\n            <div className=\"bg-white rounded-xl shadow-sm p-6\">\n              <ContactInfo variant=\"desktop\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DesktopCart;","// Утилиты для определения типа устройства\nexport const detectDevice = () => {\n  const userAgent = navigator.userAgent || navigator.vendor || window.opera;\n  \n  const isAndroid = /android/i.test(userAgent);\n  const isIOS = /iPad|iPhone|iPod/.test(userAgent) && !window.MSStream;\n  const isMobile = isAndroid || isIOS || window.innerWidth <= 768;\n  const isTablet = window.innerWidth > 768 && window.innerWidth <= 1024;\n  const isDesktop = window.innerWidth > 1024;\n\n  return {\n    isAndroid,\n    isIOS,\n    isMobile,\n    isTablet,\n    isDesktop,\n    screenWidth: window.innerWidth,\n    screenHeight: window.innerHeight\n  };\n};\n\n// Утилита для форматирования цен\nexport const formatPrice = (price) => {\n  if (typeof price !== 'number') {\n    return '0 ₽';\n  }\n  \n  return new Intl.NumberFormat('ru-RU', {\n    style: 'currency',\n    currency: 'RUB',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 2\n  }).format(price);\n};\n\n// Утилита для обрезки текста\nexport const truncateText = (text, maxLength) => {\n  if (!text || text.length <= maxLength) {\n    return text;\n  }\n  \n  return text.substr(0, maxLength) + '...';\n};\n\n// Утилита для дебаунса\nexport const debounce = (func, wait) => {\n  let timeout;\n  \n  return function executedFunction(...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n    \n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n};\n\n// Утилита для проверки валидности email\nexport const isValidEmail = (email) => {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(email);\n};\n\n// Утилита для генерации случайного ID\nexport const generateId = () => {\n  return Math.random().toString(36).substr(2, 9);\n};\n\n// Утилита для определения размера экрана\nexport const getScreenSize = () => {\n  const width = window.innerWidth;\n  \n  if (width < 640) return 'xs';\n  if (width < 768) return 'sm';\n  if (width < 1024) return 'md';\n  if (width < 1280) return 'lg';\n  if (width < 1536) return 'xl';\n  return '2xl';\n};\n\n// Утилита для сохранения в localStorage с проверкой\nexport const saveToStorage = (key, value) => {\n  try {\n    localStorage.setItem(key, JSON.stringify(value));\n    return true;\n  } catch (error) {\n    console.error('Error saving to localStorage:', error);\n    return false;\n  }\n};\n\n// Утилита для получения из localStorage с проверкой\nexport const getFromStorage = (key, defaultValue = null) => {\n  try {\n    const item = localStorage.getItem(key);\n    return item ? JSON.parse(item) : defaultValue;\n  } catch (error) {\n    console.error('Error reading from localStorage:', error);\n    return defaultValue;\n  }\n};\n\n// Утилита для очистки localStorage\nexport const clearStorage = (key) => {\n  try {\n    localStorage.removeItem(key);\n    return true;\n  } catch (error) {\n    console.error('Error clearing localStorage:', error);\n    return false;\n  }\n};"],"names":["_ref","product","variant","addItem","getItemQuantity","updateQuantity","useCart","quantity","id","handleAddToCart","_jsxs","onClick","className","concat","children","_jsx","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","handleDecrement","handleIncrement","isMobile","href","DesktopCart","items","getTotalPrice","clearCart","length","formatPrice","map","item","images","src","alt","name","category","price","CartButton","ContactInfo","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","truncateText","text","maxLength","substr"],"sourceRoot":""}