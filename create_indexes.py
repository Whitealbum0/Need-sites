#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω–¥–µ–∫—Å–æ–≤ –≤ MongoDB –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
"""
import os
import asyncio
from motor.motor_asyncio import AsyncIOMotorClient
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv('backend/.env')

async def create_indexes():
    """–°–æ–∑–¥–∞–µ—Ç –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∑–∞–ø—Ä–æ—Å–æ–≤"""
    client = AsyncIOMotorClient(os.environ['MONGO_URL'])
    db = client[os.environ['DB_NAME']]
    
    print("üîß –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏...")
    
    # –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è –∫–æ–ª–ª–µ–∫—Ü–∏–∏ products
    await db.products.create_index([("status", 1)])
    print("‚úÖ –ò–Ω–¥–µ–∫—Å –ø–æ status —Å–æ–∑–¥–∞–Ω")
    
    await db.products.create_index([("category", 1)])
    print("‚úÖ –ò–Ω–¥–µ–∫—Å –ø–æ category —Å–æ–∑–¥–∞–Ω")
    
    await db.products.create_index([("price", 1)])
    print("‚úÖ –ò–Ω–¥–µ–∫—Å –ø–æ price —Å–æ–∑–¥–∞–Ω")
    
    await db.products.create_index([("created_at", -1)])
    print("‚úÖ –ò–Ω–¥–µ–∫—Å –ø–æ created_at —Å–æ–∑–¥–∞–Ω")
    
    # –°–æ—Å—Ç–∞–≤–Ω—ã–µ –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
    await db.products.create_index([("status", 1), ("category", 1)])
    print("‚úÖ –°–æ—Å—Ç–∞–≤–Ω–æ–π –∏–Ω–¥–µ–∫—Å –ø–æ status –∏ category —Å–æ–∑–¥–∞–Ω")
    
    await db.products.create_index([("status", 1), ("price", 1)])
    print("‚úÖ –°–æ—Å—Ç–∞–≤–Ω–æ–π –∏–Ω–¥–µ–∫—Å –ø–æ status –∏ price —Å–æ–∑–¥–∞–Ω")
    
    await db.products.create_index([("category", 1), ("price", 1)])
    print("‚úÖ –°–æ—Å—Ç–∞–≤–Ω–æ–π –∏–Ω–¥–µ–∫—Å –ø–æ category –∏ price —Å–æ–∑–¥–∞–Ω")
    
    # –¢–µ–∫—Å—Ç–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å –¥–ª—è –ø–æ–∏—Å–∫–∞
    await db.products.create_index([
        ("name", "text"),
        ("description", "text"),
        ("category", "text")
    ])
    print("‚úÖ –¢–µ–∫—Å—Ç–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å–æ–∑–¥–∞–Ω")
    
    # –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è –∫–æ–ª–ª–µ–∫—Ü–∏–∏ users
    await db.users.create_index([("email", 1)], unique=True)
    print("‚úÖ –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–Ω–¥–µ–∫—Å –ø–æ email —Å–æ–∑–¥–∞–Ω")
    
    await db.users.create_index([("role", 1)])
    print("‚úÖ –ò–Ω–¥–µ–∫—Å –ø–æ role —Å–æ–∑–¥–∞–Ω")
    
    # –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è –∫–æ–ª–ª–µ–∫—Ü–∏–∏ visitor_logs
    await db.visitor_logs.create_index([("timestamp", -1)])
    print("‚úÖ –ò–Ω–¥–µ–∫—Å –ø–æ timestamp —Å–æ–∑–¥–∞–Ω")
    
    await db.visitor_logs.create_index([("user_id", 1)])
    print("‚úÖ –ò–Ω–¥–µ–∫—Å –ø–æ user_id —Å–æ–∑–¥–∞–Ω")
    
    await db.visitor_logs.create_index([("page", 1)])
    print("‚úÖ –ò–Ω–¥–µ–∫—Å –ø–æ page —Å–æ–∑–¥–∞–Ω")
    
    await db.visitor_logs.create_index([("ip_address", 1)])
    print("‚úÖ –ò–Ω–¥–µ–∫—Å –ø–æ ip_address —Å–æ–∑–¥–∞–Ω")
    
    print("\nüéâ –í—Å–µ –∏–Ω–¥–µ–∫—Å—ã —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã!")
    print("üìä –¢–µ–ø–µ—Ä—å –∑–∞–ø—Ä–æ—Å—ã –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –±—É–¥—É—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –±—ã—Å—Ç—Ä–µ–µ")
    
    # –ü—Ä–æ–≤–µ—Ä–∏–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –∏–Ω–¥–µ–∫—Å—ã
    print("\nüìã –°–ø–∏—Å–æ–∫ –∏–Ω–¥–µ–∫—Å–æ–≤ –¥–ª—è –∫–æ–ª–ª–µ–∫—Ü–∏–∏ products:")
    indexes = await db.products.list_indexes().to_list(length=None)
    for idx in indexes:
        print(f"  - {idx['name']}: {idx['key']}")
    
    client.close()

if __name__ == "__main__":
    asyncio.run(create_indexes())